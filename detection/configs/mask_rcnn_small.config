# Faster R-CNN with Inception Resnet v2, Atrous version;
# Configured for Satellite Datset.
# Users should configure the fine_tune_checkpoint field in the train config as
# well as the label_map_path and input_path fields in the train_input_reader and
# eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that
# should be configured.

model {
  faster_rcnn {
    num_classes: 1
    image_resizer {
     # keep_aspect_ratio_resizer {

       #min_dimension: 600
       # max_dimension: 1536
      #}
      fixed_shape_resizer{
        height: 1024
        width: 1024
      }
    }
    number_of_stages:3
    feature_extractor {
      type: 'faster_rcnn_inception_resnet_v2'
      first_stage_features_stride: 8
    }
    first_stage_anchor_generator {
      grid_anchor_generator {
        scales: [0.25, 0.5, 1.0, 2.0]
        aspect_ratios: [0.5, 1.0, 2.0]
        height_stride: 8
        width_stride: 8
      }
    }
    first_stage_atrous_rate: 2
    first_stage_box_predictor_conv_hyperparams {
      op: CONV
      regularizer {
        l2_regularizer {
          weight: 0.0
        }
      }
      initializer {
        truncated_normal_initializer {
          stddev: 0.01
        }
      }
    }
    first_stage_nms_score_threshold: 0.0
    first_stage_nms_iou_threshold: 0.7
    first_stage_max_proposals: 300
    first_stage_localization_loss_weight: 2.0
    first_stage_objectness_loss_weight: 1.0
    initial_crop_size: 17
    maxpool_kernel_size: 1
    maxpool_stride: 1
    second_stage_box_predictor {
      mask_rcnn_box_predictor {
        use_dropout: false
        dropout_keep_probability: 1.0
        
        # MASK RCNN

        predict_instance_masks: true
        mask_height: 33
        mask_width: 33
        mask_prediction_conv_depth: 0
        mask_prediction_num_conv_layers: 4

        fc_hyperparams {
          op: FC
          regularizer {
            l2_regularizer {
              weight: 0.0
            }
          }
          initializer {
            variance_scaling_initializer {
              factor: 1.0
              uniform: true
              mode: FAN_AVG
            }
          }
        }

       # MASK RCNN
       conv_hyperparams {
          op: CONV
          regularizer {
            l2_regularizer {
              weight: 0.0
            }
          }
          initializer {
            truncated_normal_initializer {
              stddev: 0.01
            }
          }
        }
      }
    }
    second_stage_post_processing {
      batch_non_max_suppression {
        score_threshold: 0.0
        iou_threshold: 0.6
        max_detections_per_class: 100
        max_total_detections: 100
      }
      score_converter: SOFTMAX
    }
    second_stage_localization_loss_weight: 2.0
    second_stage_classification_loss_weight: 1.0
    second_stage_mask_prediction_loss_weight: 4.0
  }
}

train_config: {
  batch_size: 3
  optimizer {
    momentum_optimizer: {
      learning_rate: {
        manual_step_learning_rate {
          initial_learning_rate: 0.0003
          schedule {
            step: 900000
            learning_rate: .00003
          }
          schedule {
            step: 1200000
            learning_rate: .000003
          }
        }
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }
  gradient_clipping_by_norm: 10.0
  fine_tune_checkpoint: "/media/ssd1/sat_data_models/faster_rcnn/large/train/model.ckpt-329598"
  from_detection_checkpoint: true
  # Note: The below line limits the training process to 200K steps, which we
  # empirically found to be sufficient enough to train the pets dataset. This
  # effectively bypasses the learning rate schedule (the learning rate will
  # never decay). Remove the below line to train indefinitely.
  num_steps: 200000
  data_augmentation_options {
    random_horizontal_flip {
    }
    random_adjust_brightness{
    }
    random_adjust_contrast{
    }
    random_adjust_hue{
    }
    random_adjust_saturation{
    }
    random_distort_color{
    }
    random_crop_pad_image{
    }
    random_vertical_flip{
    }
    random_rotation90{
    }
  }
}

train_input_reader: {
  tf_record_input_reader {
    #input_path: "/home/user/data/satellite_train.record"
    input_path: "/media/ssd1/sat_data/satellite_small_train_masks.record"
  }
  #label_map_path: "/home/user/data/satellite.pbtxt"
  label_map_path: "/media/ssd1/sat_data/satellite.pbtxt"
  load_instance_masks: true
  mask_type: PNG_MASKS
}

eval_config: {
  num_examples: 2000
  # Note: The below line limits the evaluation process to 10 evaluations.
  # Remove the below line to evaluate indefinitely.
  # max_evals: 10
  #metrics_set: 'coco_mask_metrics'
  eval_interval_secs: 5
  visualize_groundtruth_boxes: true
  groundtruth_box_visualization_color: 'LightPink'
  visualization_export_dir: "/media/ssd1/visualisation"
  keep_image_id_for_visualization_export: true
}

eval_input_reader: {
  tf_record_input_reader {
    #input_path: "/home/user/data/satellite_val.record"
    input_path:"/media/ssd1/sat_data/satellite_small_train_masks.record"
 }
  #label_map_path: "/home/user/data/satellite.pbtxt"
  label_map_path: "/media/ssd1/sat_data/satellite.pbtxt"
  shuffle: true
  num_readers: 1
  load_instance_masks: true
  mask_type: PNG_MASKS
}
